[0m[1mrandom_uuid.uuid: Refreshing state... [id=396a82e1-7928-0685-1add-fc7d87c1937a][0m
[0m[1mrandom_string.uuid: Refreshing state... [id=atq5pm4p8d][0m
[0m[1mmodule.aws_config.module.iam_role[0].data.aws_iam_policy_document.assume_role[0]: Reading...[0m[0m
[0m[1mmodule.aws_config.module.iam_role[0].data.aws_iam_policy_document.assume_role[0]: Read complete after 0s [id=1080617022][0m
[0m[1mmodule.aws_config.module.iam_role_organization_aggregator[0].data.aws_iam_policy_document.assume_role[0]: Reading...[0m[0m
[0m[1mmodule.aws_config.data.aws_caller_identity.this: Reading...[0m[0m
[0m[1mmodule.aws_config.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.aws_config.data.aws_region.this: Reading...[0m[0m
[0m[1mmodule.aws_config.module.iam_role[0].data.aws_iam_policy_document.assume_role_aggregated[0]: Reading...[0m[0m
[0m[1maws_s3_bucket.access_logs: Refreshing state... [id=config-access-logs-atq5pm4p8d][0m
[0m[1mmodule.aws_config.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.aws_config.data.aws_region.this: Read complete after 0s [id=eu-west-2][0m
[0m[1mmodule.aws_config.module.iam_role_organization_aggregator[0].data.aws_iam_policy_document.assume_role[0]: Read complete after 0s [id=1080617022][0m
[0m[1mmodule.aws_config.module.iam_role[0].data.aws_iam_policy_document.assume_role_aggregated[0]: Read complete after 0s [id=1080617022][0m
[0m[1mmodule.aws_config.data.aws_iam_policy.aws_config_organization_role: Reading...[0m[0m
[0m[1mmodule.aws_config.module.iam_role_organization_aggregator[0].data.aws_iam_policy_document.assume_role_aggregated[0]: Reading...[0m[0m
[0m[1mmodule.aws_config.module.iam_role_organization_aggregator[0].data.aws_iam_policy_document.assume_role_aggregated[0]: Read complete after 0s [id=1080617022][0m
[0m[1maws_s3_bucket.config_bucket: Refreshing state... [id=config-hist-logs-atq5pm4p8d][0m
[0m[1mmodule.aws_config.data.aws_iam_policy.aws_config_built_in_role: Reading...[0m[0m
[0m[1mmodule.aws_config.module.iam_role[0].aws_iam_role.default[0]: Refreshing state... [id=core-config-org-config][0m
[0m[1mmodule.aws_config.data.aws_caller_identity.this: Read complete after 0s [id=676206902400][0m
[0m[1mmodule.aws_config.module.iam_role_organization_aggregator[0].aws_iam_role.default[0]: Refreshing state... [id=core-config-org-aggregator-config][0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.aws_config_management.module.iam_role[0].data.aws_iam_policy_document.assume_role[0]: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.aws_config_management.module.iam_role[0].data.aws_iam_policy_document.assume_role[0]: Read complete after 0s [id=1080617022][0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=eu-west-2][0m
[0m[1mmodule.aws_config_management.data.aws_region.this: Reading...[0m[0m
[0m[1mmodule.aws_config_management.data.aws_caller_identity.this: Reading...[0m[0m
[0m[1mmodule.aws_config_management.data.aws_region.this: Read complete after 0s [id=eu-west-2][0m
[0m[1mmodule.aws_config_management.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.aws_config_management.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=288761729658][0m
[0m[1mmodule.aws_config_management.module.iam_role[0].data.aws_iam_policy_document.assume_role_aggregated[0]: Reading...[0m[0m
[0m[1mmodule.aws_config_management.module.iam_role[0].data.aws_iam_policy_document.assume_role_aggregated[0]: Read complete after 0s [id=1080617022][0m
[0m[1mmodule.aws_config_management.aws_config_aggregate_authorization.child[0]: Refreshing state... [id=676206902400:eu-west-2][0m
[0m[1mmodule.aws_config_management.data.aws_iam_policy.aws_config_built_in_role: Reading...[0m[0m
[0m[1mmodule.aws_config_management.data.aws_caller_identity.this: Read complete after 0s [id=288761729658][0m
[0m[1mmodule.aws_config_management.data.aws_iam_policy.aws_config_organization_role: Reading...[0m[0m
[0m[1mmodule.aws_config_management.module.iam_role[0].aws_iam_role.default[0]: Refreshing state... [id=core-config-org-config][0m
[0m[1mmodule.aws_config_member.data.aws_region.this: Reading...[0m[0m
[0m[1mmodule.aws_config_member.data.aws_region.this: Read complete after 0s [id=eu-west-2][0m
[0m[1mmodule.aws_config_member.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.aws_config_member.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.aws_config_member.data.aws_caller_identity.this: Reading...[0m[0m
[0m[1mmodule.aws_config_member.data.aws_caller_identity.this: Read complete after 0s [id=890742580474][0m
[0m[1mmodule.aws_config_member.module.iam_role[0].data.aws_iam_policy_document.assume_role[0]: Reading...[0m[0m
[0m[1mmodule.aws_config_member.module.iam_role[0].data.aws_iam_policy_document.assume_role[0]: Read complete after 0s [id=1080617022][0m
[0m[1mmodule.aws_config_member.module.iam_role[0].data.aws_iam_policy_document.assume_role_aggregated[0]: Reading...[0m[0m
[0m[1mmodule.aws_config_member.module.iam_role[0].data.aws_iam_policy_document.assume_role_aggregated[0]: Read complete after 0s [id=1080617022][0m
[0m[1mmodule.aws_config_member.aws_config_aggregate_authorization.child[0]: Refreshing state... [id=676206902400:eu-west-2][0m
[0m[1mmodule.aws_config_member.data.aws_iam_policy.aws_config_organization_role: Reading...[0m[0m
[0m[1mmodule.aws_config_member.data.aws_iam_policy.aws_config_built_in_role: Reading...[0m[0m
[0m[1mmodule.aws_config_member.module.iam_role[0].aws_iam_role.default[0]: Refreshing state... [id=core-config-org-config][0m
[0m[1mmodule.aws_config.data.aws_iam_policy.aws_config_organization_role: Read complete after 1s [id=arn:aws:iam::aws:policy/service-role/AWSConfigRoleForOrganizations][0m
[0m[1maws_s3_bucket_policy.aws_config_bucket_policy: Refreshing state... [id=config-hist-logs-atq5pm4p8d][0m
[0m[1mmodule.aws_config_management.data.aws_iam_policy.aws_config_organization_role: Read complete after 1s [id=arn:aws:iam::aws:policy/service-role/AWSConfigRoleForOrganizations][0m
[0m[1mmodule.aws_config_management.data.aws_iam_policy_document.config_s3_policy[0]: Reading...[0m[0m
[0m[1mmodule.aws_config_management.data.aws_iam_policy_document.config_s3_policy[0]: Read complete after 0s [id=74783352][0m
[0m[1mmodule.aws_config.data.aws_iam_policy_document.config_s3_policy[0]: Reading...[0m[0m
[0m[1mmodule.aws_config_member.data.aws_iam_policy_document.config_s3_policy[0]: Reading...[0m[0m
[0m[1mmodule.aws_config.data.aws_iam_policy_document.config_s3_policy[0]: Read complete after 0s [id=74783352][0m
[0m[1mmodule.aws_config_member.data.aws_iam_policy_document.config_s3_policy[0]: Read complete after 0s [id=74783352][0m
[0m[1mmodule.aws_config_management.module.iam_role[0].data.aws_iam_policy_document.default[0]: Reading...[0m[0m
[0m[1mmodule.aws_config_management.module.iam_role[0].data.aws_iam_policy_document.default[0]: Read complete after 0s [id=74783352][0m
[0m[1mmodule.aws_config.module.iam_role[0].data.aws_iam_policy_document.default[0]: Reading...[0m[0m
[0m[1mmodule.aws_config.module.iam_role[0].data.aws_iam_policy_document.default[0]: Read complete after 0s [id=74783352][0m
[0m[1mmodule.aws_config_member.module.iam_role[0].data.aws_iam_policy_document.default[0]: Reading...[0m[0m
[0m[1mmodule.aws_config_member.module.iam_role[0].data.aws_iam_policy_document.default[0]: Read complete after 0s [id=74783352][0m
[0m[1mmodule.aws_config.aws_iam_role_policy_attachment.organization_config_policy_attachment[0]: Refreshing state... [id=core-config-org-aggregator-config-20240923124204711200000001][0m
[0m[1mmodule.aws_config_management.module.iam_role[0].aws_iam_policy.default[0]: Refreshing state... [id=arn:aws:iam::288761729658:policy/core-config-org-config][0m
[0m[1mmodule.aws_config.module.iam_role[0].aws_iam_policy.default[0]: Refreshing state... [id=arn:aws:iam::676206902400:policy/core-config-org-config][0m
[0m[1mmodule.aws_config.aws_config_configuration_aggregator.this[0]: Refreshing state... [id=core-config-org-config-aggregator][0m
[0m[1mmodule.aws_config.aws_config_configuration_recorder.recorder[0]: Refreshing state... [id=core-config-org-config][0m
[0m[1mmodule.aws_config_member.module.iam_role[0].aws_iam_policy.default[0]: Refreshing state... [id=arn:aws:iam::890742580474:policy/core-config-org-config][0m
[0m[1mmodule.aws_config_management.data.aws_iam_policy.aws_config_built_in_role: Read complete after 1s [id=arn:aws:iam::aws:policy/service-role/AWS_ConfigRole][0m
[0m[1mmodule.aws_config_management.aws_config_configuration_recorder.recorder[0]: Refreshing state... [id=core-config-org-config][0m
[0m[1mmodule.aws_config_management.aws_iam_role_policy_attachment.config_policy_attachment[0]: Refreshing state... [id=core-config-org-config-20240923194752141700000002][0m
[0m[1mmodule.aws_config.data.aws_iam_policy.aws_config_built_in_role: Read complete after 1s [id=arn:aws:iam::aws:policy/service-role/AWS_ConfigRole][0m
[0m[1mmodule.aws_config.aws_iam_role_policy_attachment.config_policy_attachment[0]: Refreshing state... [id=core-config-org-config-20240923124204804100000003][0m
[0m[1mmodule.aws_config_management.module.iam_role[0].aws_iam_role_policy_attachment.default[0]: Refreshing state... [id=core-config-org-config-20240923194752119700000001][0m
[0m[1mmodule.aws_config.module.iam_role[0].aws_iam_role_policy_attachment.default[0]: Refreshing state... [id=core-config-org-config-20240923124204796000000002][0m
[0m[1mmodule.aws_config_member.data.aws_iam_policy.aws_config_organization_role: Read complete after 1s [id=arn:aws:iam::aws:policy/service-role/AWSConfigRoleForOrganizations][0m
[0m[1mmodule.aws_config_management.aws_config_delivery_channel.channel[0]: Refreshing state... [id=core-config-org-config][0m
[0m[1mmodule.aws_config.aws_config_delivery_channel.channel[0]: Refreshing state... [id=core-config-org-config][0m
[0m[1mmodule.aws_config_management.aws_config_configuration_recorder_status.recorder_status[0]: Refreshing state... [id=core-config-org-config][0m
[0m[1mmodule.aws_config.aws_config_configuration_recorder_status.recorder_status[0]: Refreshing state... [id=core-config-org-config][0m
[0m[1mmodule.aws_config_member.module.iam_role[0].aws_iam_role_policy_attachment.default[0]: Refreshing state... [id=core-config-org-config-20240923144459400900000001][0m
[0m[1mmodule.aws_config_member.aws_config_configuration_recorder.recorder[0]: Refreshing state... [id=core-config-org-config][0m
[0m[1mmodule.aws_config_member.aws_config_delivery_channel.channel[0]: Refreshing state... [id=core-config-org-config][0m
[0m[1mmodule.aws_config_member.aws_config_configuration_recorder_status.recorder_status[0]: Refreshing state... [id=core-config-org-config][0m
[0m[1mmodule.aws_config_member.data.aws_iam_policy.aws_config_built_in_role: Read complete after 2s [id=arn:aws:iam::aws:policy/service-role/AWS_ConfigRole][0m
[0m[1mmodule.aws_config_member.aws_iam_role_policy_attachment.config_policy_attachment[0]: Refreshing state... [id=core-config-org-config-20240923144459401800000002][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [31m-[0m destroy[0m

Terraform will perform the following actions:

[1m  # aws_s3_bucket.access_logs[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_s3_bucket" "access_logs" {
      [31m-[0m[0m arn                         = "arn:aws:s3:::config-access-logs-atq5pm4p8d" [90m-> null[0m[0m
      [31m-[0m[0m bucket                      = "config-access-logs-atq5pm4p8d" [90m-> null[0m[0m
      [31m-[0m[0m bucket_domain_name          = "config-access-logs-atq5pm4p8d.s3.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m bucket_regional_domain_name = "config-access-logs-atq5pm4p8d.s3.eu-west-2.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m force_destroy               = true [90m-> null[0m[0m
      [31m-[0m[0m hosted_zone_id              = "Z3GKZC51ZF0DB4" [90m-> null[0m[0m
      [31m-[0m[0m id                          = "config-access-logs-atq5pm4p8d" [90m-> null[0m[0m
      [31m-[0m[0m object_lock_enabled         = false [90m-> null[0m[0m
      [31m-[0m[0m region                      = "eu-west-2" [90m-> null[0m[0m
      [31m-[0m[0m request_payer               = "BucketOwner" [90m-> null[0m[0m
      [31m-[0m[0m tags                        = {
          [31m-[0m[0m "Name" = "Config S3 Access Logs"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                    = {
          [31m-[0m[0m "Name" = "Config S3 Access Logs"
        } [90m-> null[0m[0m
        [90m# (3 unchanged attributes hidden)[0m[0m

      [31m-[0m[0m grant {
          [31m-[0m[0m id          = "5df4eea9f883d648919f6cd16ec7034a36dbf648d24ff30db26ae4fe1aec7e39" [90m-> null[0m[0m
          [31m-[0m[0m permissions = [
              [31m-[0m[0m "FULL_CONTROL",
            ] [90m-> null[0m[0m
          [31m-[0m[0m type        = "CanonicalUser" [90m-> null[0m[0m
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [31m-[0m[0m server_side_encryption_configuration {
          [31m-[0m[0m rule {
              [31m-[0m[0m bucket_key_enabled = false [90m-> null[0m[0m

              [31m-[0m[0m apply_server_side_encryption_by_default {
                  [31m-[0m[0m sse_algorithm     = "AES256" [90m-> null[0m[0m
                    [90m# (1 unchanged attribute hidden)[0m[0m
                }
            }
        }

      [31m-[0m[0m versioning {
          [31m-[0m[0m enabled    = false [90m-> null[0m[0m
          [31m-[0m[0m mfa_delete = false [90m-> null[0m[0m
        }
    }

[1m  # aws_s3_bucket.config_bucket[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_s3_bucket" "config_bucket" {
      [31m-[0m[0m arn                         = "arn:aws:s3:::config-hist-logs-atq5pm4p8d" [90m-> null[0m[0m
      [31m-[0m[0m bucket                      = "config-hist-logs-atq5pm4p8d" [90m-> null[0m[0m
      [31m-[0m[0m bucket_domain_name          = "config-hist-logs-atq5pm4p8d.s3.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m bucket_regional_domain_name = "config-hist-logs-atq5pm4p8d.s3.eu-west-2.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m force_destroy               = true [90m-> null[0m[0m
      [31m-[0m[0m hosted_zone_id              = "Z3GKZC51ZF0DB4" [90m-> null[0m[0m
      [31m-[0m[0m id                          = "config-hist-logs-atq5pm4p8d" [90m-> null[0m[0m
      [31m-[0m[0m object_lock_enabled         = false [90m-> null[0m[0m
      [31m-[0m[0m policy                      = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "s3:GetBucketAcl"
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringEquals = {
                              [31m-[0m[0m "aws:PrincipalOrgID" = "o-4jsdkwq1yx"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m AWS = "*"
                        }
                      [31m-[0m[0m Resource  = "arn:aws:s3:::config-hist-logs-atq5pm4p8d"
                      [31m-[0m[0m Sid       = "AWSConfigBucketPermissionsCheck"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "s3:PutObject"
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringEquals = {
                              [31m-[0m[0m "aws:PrincipalOrgID" = "o-4jsdkwq1yx"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m AWS = "*"
                        }
                      [31m-[0m[0m Resource  = [
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d/config/AWSLogs/676206902400/Config/*",
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d/config/AWSLogs/288761729658/Config/*",
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d/config/AWSLogs/890742580474/Config/*",
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d/config/AWSLogs/307946680224/Config/*",
                        ]
                      [31m-[0m[0m Sid       = "AWSConfigBucketDelivery"
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) [90m-> null[0m[0m
      [31m-[0m[0m region                      = "eu-west-2" [90m-> null[0m[0m
      [31m-[0m[0m request_payer               = "BucketOwner" [90m-> null[0m[0m
      [31m-[0m[0m tags                        = {
          [31m-[0m[0m "Name" = "Config History Logs"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                    = {
          [31m-[0m[0m "Name" = "Config History Logs"
        } [90m-> null[0m[0m
        [90m# (2 unchanged attributes hidden)[0m[0m

      [31m-[0m[0m grant {
          [31m-[0m[0m id          = "5df4eea9f883d648919f6cd16ec7034a36dbf648d24ff30db26ae4fe1aec7e39" [90m-> null[0m[0m
          [31m-[0m[0m permissions = [
              [31m-[0m[0m "FULL_CONTROL",
            ] [90m-> null[0m[0m
          [31m-[0m[0m type        = "CanonicalUser" [90m-> null[0m[0m
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [31m-[0m[0m server_side_encryption_configuration {
          [31m-[0m[0m rule {
              [31m-[0m[0m bucket_key_enabled = false [90m-> null[0m[0m

              [31m-[0m[0m apply_server_side_encryption_by_default {
                  [31m-[0m[0m sse_algorithm     = "AES256" [90m-> null[0m[0m
                    [90m# (1 unchanged attribute hidden)[0m[0m
                }
            }
        }

      [31m-[0m[0m versioning {
          [31m-[0m[0m enabled    = false [90m-> null[0m[0m
          [31m-[0m[0m mfa_delete = false [90m-> null[0m[0m
        }
    }

[1m  # aws_s3_bucket_policy.aws_config_bucket_policy[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_s3_bucket_policy" "aws_config_bucket_policy" {
      [31m-[0m[0m bucket = "config-hist-logs-atq5pm4p8d" [90m-> null[0m[0m
      [31m-[0m[0m id     = "config-hist-logs-atq5pm4p8d" [90m-> null[0m[0m
      [31m-[0m[0m policy = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "s3:GetBucketAcl"
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringEquals = {
                              [31m-[0m[0m "aws:PrincipalOrgID" = [
                                  [31m-[0m[0m "o-4jsdkwq1yx",
                                ]
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m AWS = "*"
                        }
                      [31m-[0m[0m Resource  = "arn:aws:s3:::config-hist-logs-atq5pm4p8d"
                      [31m-[0m[0m Sid       = "AWSConfigBucketPermissionsCheck"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "s3:PutObject"
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringEquals = {
                              [31m-[0m[0m "aws:PrincipalOrgID" = [
                                  [31m-[0m[0m "o-4jsdkwq1yx",
                                ]
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m AWS = "*"
                        }
                      [31m-[0m[0m Resource  = [
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d/config/AWSLogs/676206902400/Config/*",
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d/config/AWSLogs/288761729658/Config/*",
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d/config/AWSLogs/890742580474/Config/*",
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d/config/AWSLogs/307946680224/Config/*",
                        ]
                      [31m-[0m[0m Sid       = "AWSConfigBucketDelivery"
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) [90m-> null[0m[0m
    }

[1m  # random_string.uuid[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "random_string" "uuid" {
      [31m-[0m[0m id          = "atq5pm4p8d" [90m-> null[0m[0m
      [31m-[0m[0m length      = 10 [90m-> null[0m[0m
      [31m-[0m[0m lower       = true [90m-> null[0m[0m
      [31m-[0m[0m min_lower   = 0 [90m-> null[0m[0m
      [31m-[0m[0m min_numeric = 0 [90m-> null[0m[0m
      [31m-[0m[0m min_special = 0 [90m-> null[0m[0m
      [31m-[0m[0m min_upper   = 0 [90m-> null[0m[0m
      [31m-[0m[0m number      = true [90m-> null[0m[0m
      [31m-[0m[0m numeric     = true [90m-> null[0m[0m
      [31m-[0m[0m result      = "atq5pm4p8d" [90m-> null[0m[0m
      [31m-[0m[0m special     = false [90m-> null[0m[0m
      [31m-[0m[0m upper       = false [90m-> null[0m[0m
    }

[1m  # random_uuid.uuid[0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "random_uuid" "uuid" {
      [31m-[0m[0m id     = "396a82e1-7928-0685-1add-fc7d87c1937a" [90m-> null[0m[0m
      [31m-[0m[0m result = "396a82e1-7928-0685-1add-fc7d87c1937a" [90m-> null[0m[0m
    }

[1m  # module.aws_config.aws_config_configuration_aggregator.this[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_config_configuration_aggregator" "this" {
      [31m-[0m[0m arn      = "arn:aws:config:eu-west-2:676206902400:config-aggregator/config-aggregator-uz8eqcvz" [90m-> null[0m[0m
      [31m-[0m[0m id       = "core-config-org-config-aggregator" [90m-> null[0m[0m
      [31m-[0m[0m name     = "core-config-org-config-aggregator" [90m-> null[0m[0m
      [31m-[0m[0m tags     = {
          [31m-[0m[0m "Name" = "core-config-org"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all = {
          [31m-[0m[0m "Name" = "core-config-org"
        } [90m-> null[0m[0m

      [31m-[0m[0m organization_aggregation_source {
          [31m-[0m[0m all_regions = true [90m-> null[0m[0m
          [31m-[0m[0m regions     = [] [90m-> null[0m[0m
          [31m-[0m[0m role_arn    = "arn:aws:iam::676206902400:role/core-config-org-aggregator-config" [90m-> null[0m[0m
        }
    }

[1m  # module.aws_config.aws_config_configuration_recorder.recorder[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_config_configuration_recorder" "recorder" {
      [31m-[0m[0m id       = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m name     = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m role_arn = "arn:aws:iam::676206902400:role/core-config-org-config" [90m-> null[0m[0m

      [31m-[0m[0m recording_group {
          [31m-[0m[0m all_supported                 = true [90m-> null[0m[0m
          [31m-[0m[0m include_global_resource_types = true [90m-> null[0m[0m
          [31m-[0m[0m resource_types                = [] [90m-> null[0m[0m

          [31m-[0m[0m exclusion_by_resource_types {
              [31m-[0m[0m resource_types = [] [90m-> null[0m[0m
            }

          [31m-[0m[0m recording_strategy {
              [31m-[0m[0m use_only = "ALL_SUPPORTED_RESOURCE_TYPES" [90m-> null[0m[0m
            }
        }

      [31m-[0m[0m recording_mode {
          [31m-[0m[0m recording_frequency = "CONTINUOUS" [90m-> null[0m[0m
        }
    }

[1m  # module.aws_config.aws_config_configuration_recorder_status.recorder_status[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_config_configuration_recorder_status" "recorder_status" {
      [31m-[0m[0m id         = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m is_enabled = true [90m-> null[0m[0m
      [31m-[0m[0m name       = "core-config-org-config" [90m-> null[0m[0m
    }

[1m  # module.aws_config.aws_config_delivery_channel.channel[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_config_delivery_channel" "channel" {
      [31m-[0m[0m id             = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m name           = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m s3_bucket_name = "config-hist-logs-atq5pm4p8d" [90m-> null[0m[0m
      [31m-[0m[0m s3_key_prefix  = "config" [90m-> null[0m[0m
        [90m# (2 unchanged attributes hidden)[0m[0m
    }

[1m  # module.aws_config.aws_iam_role_policy_attachment.config_policy_attachment[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_role_policy_attachment" "config_policy_attachment" {
      [31m-[0m[0m id         = "core-config-org-config-20240923124204804100000003" [90m-> null[0m[0m
      [31m-[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AWS_ConfigRole" [90m-> null[0m[0m
      [31m-[0m[0m role       = "core-config-org-config" [90m-> null[0m[0m
    }

[1m  # module.aws_config.aws_iam_role_policy_attachment.organization_config_policy_attachment[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_role_policy_attachment" "organization_config_policy_attachment" {
      [31m-[0m[0m id         = "core-config-org-aggregator-config-20240923124204711200000001" [90m-> null[0m[0m
      [31m-[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AWSConfigRoleForOrganizations" [90m-> null[0m[0m
      [31m-[0m[0m role       = "core-config-org-aggregator-config" [90m-> null[0m[0m
    }

[1m  # module.aws_config_management.aws_config_aggregate_authorization.child[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_config_aggregate_authorization" "child" {
      [31m-[0m[0m account_id = "676206902400" [90m-> null[0m[0m
      [31m-[0m[0m arn        = "arn:aws:config:eu-west-2:288761729658:aggregation-authorization/676206902400/eu-west-2" [90m-> null[0m[0m
      [31m-[0m[0m id         = "676206902400:eu-west-2" [90m-> null[0m[0m
      [31m-[0m[0m region     = "eu-west-2" [90m-> null[0m[0m
      [31m-[0m[0m tags       = {
          [31m-[0m[0m "Name" = "core-config-org"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all   = {
          [31m-[0m[0m "Name" = "core-config-org"
        } [90m-> null[0m[0m
    }

[1m  # module.aws_config_management.aws_config_configuration_recorder.recorder[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_config_configuration_recorder" "recorder" {
      [31m-[0m[0m id       = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m name     = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m role_arn = "arn:aws:iam::288761729658:role/core-config-org-config" [90m-> null[0m[0m

      [31m-[0m[0m recording_group {
          [31m-[0m[0m all_supported                 = true [90m-> null[0m[0m
          [31m-[0m[0m include_global_resource_types = true [90m-> null[0m[0m
          [31m-[0m[0m resource_types                = [] [90m-> null[0m[0m

          [31m-[0m[0m exclusion_by_resource_types {
              [31m-[0m[0m resource_types = [] [90m-> null[0m[0m
            }

          [31m-[0m[0m recording_strategy {
              [31m-[0m[0m use_only = "ALL_SUPPORTED_RESOURCE_TYPES" [90m-> null[0m[0m
            }
        }

      [31m-[0m[0m recording_mode {
          [31m-[0m[0m recording_frequency = "CONTINUOUS" [90m-> null[0m[0m
        }
    }

[1m  # module.aws_config_management.aws_config_configuration_recorder_status.recorder_status[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_config_configuration_recorder_status" "recorder_status" {
      [31m-[0m[0m id         = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m is_enabled = true [90m-> null[0m[0m
      [31m-[0m[0m name       = "core-config-org-config" [90m-> null[0m[0m
    }

[1m  # module.aws_config_management.aws_config_delivery_channel.channel[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_config_delivery_channel" "channel" {
      [31m-[0m[0m id             = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m name           = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m s3_bucket_name = "config-hist-logs-atq5pm4p8d" [90m-> null[0m[0m
      [31m-[0m[0m s3_key_prefix  = "config" [90m-> null[0m[0m
        [90m# (2 unchanged attributes hidden)[0m[0m
    }

[1m  # module.aws_config_management.aws_iam_role_policy_attachment.config_policy_attachment[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_role_policy_attachment" "config_policy_attachment" {
      [31m-[0m[0m id         = "core-config-org-config-20240923194752141700000002" [90m-> null[0m[0m
      [31m-[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AWS_ConfigRole" [90m-> null[0m[0m
      [31m-[0m[0m role       = "core-config-org-config" [90m-> null[0m[0m
    }

[1m  # module.aws_config_member.aws_config_aggregate_authorization.child[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_config_aggregate_authorization" "child" {
      [31m-[0m[0m account_id = "676206902400" [90m-> null[0m[0m
      [31m-[0m[0m arn        = "arn:aws:config:eu-west-2:890742580474:aggregation-authorization/676206902400/eu-west-2" [90m-> null[0m[0m
      [31m-[0m[0m id         = "676206902400:eu-west-2" [90m-> null[0m[0m
      [31m-[0m[0m region     = "eu-west-2" [90m-> null[0m[0m
      [31m-[0m[0m tags       = {
          [31m-[0m[0m "Name" = "core-config-org"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all   = {
          [31m-[0m[0m "Name" = "core-config-org"
        } [90m-> null[0m[0m
    }

[1m  # module.aws_config_member.aws_config_configuration_recorder.recorder[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_config_configuration_recorder" "recorder" {
      [31m-[0m[0m id       = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m name     = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m role_arn = "arn:aws:iam::890742580474:role/core-config-org-config" [90m-> null[0m[0m

      [31m-[0m[0m recording_group {
          [31m-[0m[0m all_supported                 = true [90m-> null[0m[0m
          [31m-[0m[0m include_global_resource_types = true [90m-> null[0m[0m
          [31m-[0m[0m resource_types                = [] [90m-> null[0m[0m

          [31m-[0m[0m exclusion_by_resource_types {
              [31m-[0m[0m resource_types = [] [90m-> null[0m[0m
            }

          [31m-[0m[0m recording_strategy {
              [31m-[0m[0m use_only = "ALL_SUPPORTED_RESOURCE_TYPES" [90m-> null[0m[0m
            }
        }

      [31m-[0m[0m recording_mode {
          [31m-[0m[0m recording_frequency = "CONTINUOUS" [90m-> null[0m[0m
        }
    }

[1m  # module.aws_config_member.aws_config_configuration_recorder_status.recorder_status[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_config_configuration_recorder_status" "recorder_status" {
      [31m-[0m[0m id         = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m is_enabled = true [90m-> null[0m[0m
      [31m-[0m[0m name       = "core-config-org-config" [90m-> null[0m[0m
    }

[1m  # module.aws_config_member.aws_config_delivery_channel.channel[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_config_delivery_channel" "channel" {
      [31m-[0m[0m id             = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m name           = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m s3_bucket_name = "config-hist-logs-atq5pm4p8d" [90m-> null[0m[0m
      [31m-[0m[0m s3_key_prefix  = "config" [90m-> null[0m[0m
        [90m# (2 unchanged attributes hidden)[0m[0m
    }

[1m  # module.aws_config_member.aws_iam_role_policy_attachment.config_policy_attachment[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_role_policy_attachment" "config_policy_attachment" {
      [31m-[0m[0m id         = "core-config-org-config-20240923144459401800000002" [90m-> null[0m[0m
      [31m-[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AWS_ConfigRole" [90m-> null[0m[0m
      [31m-[0m[0m role       = "core-config-org-config" [90m-> null[0m[0m
    }

[1m  # module.aws_config.module.iam_role[0].aws_iam_policy.default[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_policy" "default" {
      [31m-[0m[0m arn              = "arn:aws:iam::676206902400:policy/core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m attachment_count = 1 [90m-> null[0m[0m
      [31m-[0m[0m description      = "AWS Config IAM policy" [90m-> null[0m[0m
      [31m-[0m[0m id               = "arn:aws:iam::676206902400:policy/core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m name             = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m path             = "/" [90m-> null[0m[0m
      [31m-[0m[0m policy           = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "s3:PutObject",
                          [31m-[0m[0m "s3:GetBucketAcl",
                        ]
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringLike = {
                              [31m-[0m[0m "s3:x-amz-acl" = "bucket-owner-full-control"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = [
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d/*",
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d",
                        ]
                      [31m-[0m[0m Sid       = "ConfigS3"
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) [90m-> null[0m[0m
      [31m-[0m[0m policy_id        = "ANPAZ24ISPSACPSZFAF2M" [90m-> null[0m[0m
      [31m-[0m[0m tags             = {
          [31m-[0m[0m "Attributes" = "config"
          [31m-[0m[0m "Name"       = "core-config-org-config"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all         = {
          [31m-[0m[0m "Attributes" = "config"
          [31m-[0m[0m "Name"       = "core-config-org-config"
        } [90m-> null[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.aws_config.module.iam_role[0].aws_iam_role.default[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_role" "default" {
      [31m-[0m[0m arn                   = "arn:aws:iam::676206902400:role/core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m assume_role_policy    = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "sts:TagSession",
                          [31m-[0m[0m "sts:AssumeRole",
                        ]
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m Service = "config.amazonaws.com"
                        }
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) [90m-> null[0m[0m
      [31m-[0m[0m create_date           = "2024-09-23T12:42:03Z" [90m-> null[0m[0m
      [31m-[0m[0m description           = "AWS Config IAM role" [90m-> null[0m[0m
      [31m-[0m[0m force_detach_policies = false [90m-> null[0m[0m
      [31m-[0m[0m id                    = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m managed_policy_arns   = [
          [31m-[0m[0m "arn:aws:iam::676206902400:policy/core-config-org-config",
          [31m-[0m[0m "arn:aws:iam::aws:policy/service-role/AWS_ConfigRole",
        ] [90m-> null[0m[0m
      [31m-[0m[0m max_session_duration  = 3600 [90m-> null[0m[0m
      [31m-[0m[0m name                  = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m path                  = "/" [90m-> null[0m[0m
      [31m-[0m[0m tags                  = {
          [31m-[0m[0m "Attributes" = "config"
          [31m-[0m[0m "Name"       = "core-config-org-config"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all              = {
          [31m-[0m[0m "Attributes" = "config"
          [31m-[0m[0m "Name"       = "core-config-org-config"
        } [90m-> null[0m[0m
      [31m-[0m[0m unique_id             = "AROAZ24ISPSAMYSUL3LXH" [90m-> null[0m[0m
        [90m# (2 unchanged attributes hidden)[0m[0m
    }

[1m  # module.aws_config.module.iam_role[0].aws_iam_role_policy_attachment.default[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_role_policy_attachment" "default" {
      [31m-[0m[0m id         = "core-config-org-config-20240923124204796000000002" [90m-> null[0m[0m
      [31m-[0m[0m policy_arn = "arn:aws:iam::676206902400:policy/core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m role       = "core-config-org-config" [90m-> null[0m[0m
    }

[1m  # module.aws_config.module.iam_role_organization_aggregator[0].aws_iam_role.default[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_role" "default" {
      [31m-[0m[0m arn                   = "arn:aws:iam::676206902400:role/core-config-org-aggregator-config" [90m-> null[0m[0m
      [31m-[0m[0m assume_role_policy    = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "sts:TagSession",
                          [31m-[0m[0m "sts:AssumeRole",
                        ]
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m Service = "config.amazonaws.com"
                        }
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) [90m-> null[0m[0m
      [31m-[0m[0m create_date           = "2024-09-23T12:42:03Z" [90m-> null[0m[0m
      [31m-[0m[0m description           = "AWS Config IAM role for organization aggregator" [90m-> null[0m[0m
      [31m-[0m[0m force_detach_policies = false [90m-> null[0m[0m
      [31m-[0m[0m id                    = "core-config-org-aggregator-config" [90m-> null[0m[0m
      [31m-[0m[0m managed_policy_arns   = [
          [31m-[0m[0m "arn:aws:iam::aws:policy/service-role/AWSConfigRoleForOrganizations",
        ] [90m-> null[0m[0m
      [31m-[0m[0m max_session_duration  = 3600 [90m-> null[0m[0m
      [31m-[0m[0m name                  = "core-config-org-aggregator-config" [90m-> null[0m[0m
      [31m-[0m[0m path                  = "/" [90m-> null[0m[0m
      [31m-[0m[0m tags                  = {
          [31m-[0m[0m "Attributes" = "aggregator-config"
          [31m-[0m[0m "Name"       = "core-config-org-aggregator-config"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all              = {
          [31m-[0m[0m "Attributes" = "aggregator-config"
          [31m-[0m[0m "Name"       = "core-config-org-aggregator-config"
        } [90m-> null[0m[0m
      [31m-[0m[0m unique_id             = "AROAZ24ISPSAHFNL2SNWT" [90m-> null[0m[0m
        [90m# (2 unchanged attributes hidden)[0m[0m
    }

[1m  # module.aws_config_management.module.iam_role[0].aws_iam_policy.default[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_policy" "default" {
      [31m-[0m[0m arn              = "arn:aws:iam::288761729658:policy/core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m attachment_count = 1 [90m-> null[0m[0m
      [31m-[0m[0m description      = "AWS Config IAM policy" [90m-> null[0m[0m
      [31m-[0m[0m id               = "arn:aws:iam::288761729658:policy/core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m name             = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m path             = "/" [90m-> null[0m[0m
      [31m-[0m[0m policy           = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "s3:PutObject",
                          [31m-[0m[0m "s3:GetBucketAcl",
                        ]
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringLike = {
                              [31m-[0m[0m "s3:x-amz-acl" = "bucket-owner-full-control"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = [
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d/*",
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d",
                        ]
                      [31m-[0m[0m Sid       = "ConfigS3"
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) [90m-> null[0m[0m
      [31m-[0m[0m policy_id        = "ANPAUGO4KKJ5AFFHJMMVY" [90m-> null[0m[0m
      [31m-[0m[0m tags             = {
          [31m-[0m[0m "Attributes" = "config"
          [31m-[0m[0m "Name"       = "core-config-org-config"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all         = {
          [31m-[0m[0m "Attributes" = "config"
          [31m-[0m[0m "Name"       = "core-config-org-config"
        } [90m-> null[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.aws_config_management.module.iam_role[0].aws_iam_role.default[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_role" "default" {
      [31m-[0m[0m arn                   = "arn:aws:iam::288761729658:role/core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m assume_role_policy    = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "sts:TagSession",
                          [31m-[0m[0m "sts:AssumeRole",
                        ]
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m Service = "config.amazonaws.com"
                        }
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) [90m-> null[0m[0m
      [31m-[0m[0m create_date           = "2024-09-23T19:47:50Z" [90m-> null[0m[0m
      [31m-[0m[0m description           = "AWS Config IAM role" [90m-> null[0m[0m
      [31m-[0m[0m force_detach_policies = false [90m-> null[0m[0m
      [31m-[0m[0m id                    = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m managed_policy_arns   = [
          [31m-[0m[0m "arn:aws:iam::288761729658:policy/core-config-org-config",
          [31m-[0m[0m "arn:aws:iam::aws:policy/service-role/AWS_ConfigRole",
        ] [90m-> null[0m[0m
      [31m-[0m[0m max_session_duration  = 3600 [90m-> null[0m[0m
      [31m-[0m[0m name                  = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m path                  = "/" [90m-> null[0m[0m
      [31m-[0m[0m tags                  = {
          [31m-[0m[0m "Attributes" = "config"
          [31m-[0m[0m "Name"       = "core-config-org-config"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all              = {
          [31m-[0m[0m "Attributes" = "config"
          [31m-[0m[0m "Name"       = "core-config-org-config"
        } [90m-> null[0m[0m
      [31m-[0m[0m unique_id             = "AROAUGO4KKJ5DYK4KYN5T" [90m-> null[0m[0m
        [90m# (2 unchanged attributes hidden)[0m[0m
    }

[1m  # module.aws_config_management.module.iam_role[0].aws_iam_role_policy_attachment.default[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_role_policy_attachment" "default" {
      [31m-[0m[0m id         = "core-config-org-config-20240923194752119700000001" [90m-> null[0m[0m
      [31m-[0m[0m policy_arn = "arn:aws:iam::288761729658:policy/core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m role       = "core-config-org-config" [90m-> null[0m[0m
    }

[1m  # module.aws_config_member.module.iam_role[0].aws_iam_policy.default[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_policy" "default" {
      [31m-[0m[0m arn              = "arn:aws:iam::890742580474:policy/core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m attachment_count = 1 [90m-> null[0m[0m
      [31m-[0m[0m description      = "AWS Config IAM policy" [90m-> null[0m[0m
      [31m-[0m[0m id               = "arn:aws:iam::890742580474:policy/core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m name             = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m path             = "/" [90m-> null[0m[0m
      [31m-[0m[0m policy           = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "s3:PutObject",
                          [31m-[0m[0m "s3:GetBucketAcl",
                        ]
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringLike = {
                              [31m-[0m[0m "s3:x-amz-acl" = "bucket-owner-full-control"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = [
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d/*",
                          [31m-[0m[0m "arn:aws:s3:::config-hist-logs-atq5pm4p8d",
                        ]
                      [31m-[0m[0m Sid       = "ConfigS3"
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) [90m-> null[0m[0m
      [31m-[0m[0m policy_id        = "ANPA46ZDFET5L4GBBDQM4" [90m-> null[0m[0m
      [31m-[0m[0m tags             = {
          [31m-[0m[0m "Attributes" = "config"
          [31m-[0m[0m "Name"       = "core-config-org-config"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all         = {
          [31m-[0m[0m "Attributes" = "config"
          [31m-[0m[0m "Name"       = "core-config-org-config"
        } [90m-> null[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.aws_config_member.module.iam_role[0].aws_iam_role.default[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_role" "default" {
      [31m-[0m[0m arn                   = "arn:aws:iam::890742580474:role/core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m assume_role_policy    = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "sts:TagSession",
                          [31m-[0m[0m "sts:AssumeRole",
                        ]
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m Service = "config.amazonaws.com"
                        }
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) [90m-> null[0m[0m
      [31m-[0m[0m create_date           = "2024-09-23T14:44:57Z" [90m-> null[0m[0m
      [31m-[0m[0m description           = "AWS Config IAM role" [90m-> null[0m[0m
      [31m-[0m[0m force_detach_policies = false [90m-> null[0m[0m
      [31m-[0m[0m id                    = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m managed_policy_arns   = [
          [31m-[0m[0m "arn:aws:iam::890742580474:policy/core-config-org-config",
          [31m-[0m[0m "arn:aws:iam::aws:policy/service-role/AWS_ConfigRole",
        ] [90m-> null[0m[0m
      [31m-[0m[0m max_session_duration  = 3600 [90m-> null[0m[0m
      [31m-[0m[0m name                  = "core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m path                  = "/" [90m-> null[0m[0m
      [31m-[0m[0m tags                  = {
          [31m-[0m[0m "Attributes" = "config"
          [31m-[0m[0m "Name"       = "core-config-org-config"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all              = {
          [31m-[0m[0m "Attributes" = "config"
          [31m-[0m[0m "Name"       = "core-config-org-config"
        } [90m-> null[0m[0m
      [31m-[0m[0m unique_id             = "AROA46ZDFET5FH5AXAKYK" [90m-> null[0m[0m
        [90m# (2 unchanged attributes hidden)[0m[0m
    }

[1m  # module.aws_config_member.module.iam_role[0].aws_iam_role_policy_attachment.default[0][0m will be [1m[31mdestroyed[0m
[0m  [31m-[0m[0m resource "aws_iam_role_policy_attachment" "default" {
      [31m-[0m[0m id         = "core-config-org-config-20240923144459400900000001" [90m-> null[0m[0m
      [31m-[0m[0m policy_arn = "arn:aws:iam::890742580474:policy/core-config-org-config" [90m-> null[0m[0m
      [31m-[0m[0m role       = "core-config-org-config" [90m-> null[0m[0m
    }

[1mPlan:[0m 0 to add, 0 to change, 31 to destroy.
[0m
Changes to Outputs:
  [31m-[0m[0m config_recorder_id = "core-config-org-config" [90m-> null[0m[0m
  [31m-[0m[0m iam_role           = "arn:aws:iam::676206902400:role/core-config-org-config" [90m-> null[0m[0m
  [31m-[0m[0m storage_bucket_arn = "arn:aws:s3:::config-hist-logs-atq5pm4p8d" [90m-> null[0m[0m
  [31m-[0m[0m storage_bucket_id  = "config-hist-logs-atq5pm4p8d" [90m-> null[0m[0m
[0m[1m
Do you really want to destroy all resources?[0m
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  [1mEnter a value:[0m [0m

Interrupt received.
Please wait for Terraform to exit or data loss may occur.
Gracefully shutting down...

